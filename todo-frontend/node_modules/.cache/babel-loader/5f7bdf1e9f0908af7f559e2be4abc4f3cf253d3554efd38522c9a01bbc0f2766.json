{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aver\\\\Desktop\\\\Todo-List\\\\todo-frontend\\\\src\\\\components\\\\TaskList.js\";\nimport React from \"react\";\nimport api from \"../services/api\";\nimport \"../dashboard.css\"; // Assicurati di importare il file CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onDelete,\n  onToggle\n}) => {\n  const handleToggle = async task => {\n    try {\n      await api.put(`/tasks/${task.id}`, {\n        completed: !task.completed\n      });\n      onToggle(task.id); // Assicurati che lo stato venga aggiornato subito\n    } catch (error) {\n      alert(\"Errore nell'aggiornamento dell'attivit√†: \" + error.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDE80 Nessuna attivit\\xE0 in elenco. Scrivi la prima! :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-text\",\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => handleToggle(task)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(task.id),\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","api","jsxDEV","_jsxDEV","TaskList","tasks","onDelete","onToggle","handleToggle","task","put","id","completed","error","alert","response","data","message","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","className","name","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Aver/Desktop/Todo-List/todo-frontend/src/components/TaskList.js"],"sourcesContent":["import React from \"react\";\r\nimport api from \"../services/api\";\r\nimport \"../dashboard.css\"; // Assicurati di importare il file CSS\r\n\r\nconst TaskList = ({ tasks, onDelete, onToggle }) => {\r\n  const handleToggle = async (task) => {\r\n    try {\r\n      await api.put(`/tasks/${task.id}`, { completed: !task.completed });\r\n      onToggle(task.id); // Assicurati che lo stato venga aggiornato subito\r\n    } catch (error) {\r\n      alert(\"Errore nell'aggiornamento dell'attivit√†: \" + error.response.data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {tasks.length === 0 ? (\r\n        <p>üöÄ Nessuna attivit√† in elenco. Scrivi la prima! :)</p>\r\n      ) : (\r\n        tasks.map((task) => (\r\n          <li key={task.id}>\r\n            <div className=\"task-text\">{task.name}</div>\r\n            <div className=\"task-actions\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={task.completed}\r\n                onChange={() => handleToggle(task)}\r\n              />\r\n              <button onClick={() => onDelete(task.id)}>‚ùå</button>\r\n            </div>\r\n          </li>\r\n        ))\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAClD,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnC,IAAI;MACF,MAAMR,GAAG,CAACS,GAAG,CAAC,UAAUD,IAAI,CAACE,EAAE,EAAE,EAAE;QAAEC,SAAS,EAAE,CAACH,IAAI,CAACG;MAAU,CAAC,CAAC;MAClEL,QAAQ,CAACE,IAAI,CAACE,EAAE,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,KAAK,CAAC,2CAA2C,GAAGD,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IAClF;EACF,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,EACGb,KAAK,CAACc,MAAM,KAAK,CAAC,gBACjBhB,OAAA;MAAAe,QAAA,EAAG;IAAkD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEzDlB,KAAK,CAACmB,GAAG,CAAEf,IAAI,iBACbN,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAKsB,SAAS,EAAC,WAAW;QAAAP,QAAA,EAAET,IAAI,CAACiB;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5CpB,OAAA;QAAKsB,SAAS,EAAC,cAAc;QAAAP,QAAA,gBAC3Bf,OAAA;UACEwB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEnB,IAAI,CAACG,SAAU;UACxBiB,QAAQ,EAAEA,CAAA,KAAMrB,YAAY,CAACC,IAAI;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACFpB,OAAA;UAAQ2B,OAAO,EAAEA,CAAA,KAAMxB,QAAQ,CAACG,IAAI,CAACE,EAAE,CAAE;UAAAO,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA,GATCd,IAAI,CAACE,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUZ,CACL;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET,CAAC;AAACQ,EAAA,GA/BI3B,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}