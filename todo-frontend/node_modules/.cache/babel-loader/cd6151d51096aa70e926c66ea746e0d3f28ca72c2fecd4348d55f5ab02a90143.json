{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aver\\\\Desktop\\\\Todo-List\\\\todo-frontend\\\\src\\\\components\\\\TaskList.js\";\nimport React from \"react\";\nimport api from \"../services/api\";\nimport \"../dashboard.css\"; // Assicurati di importare il file CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onDelete,\n  onToggle\n}) => {\n  const handleToggle = async task => {\n    const updatedTask = {\n      ...task,\n      completed: !task.completed\n    };\n    await api.put(`/tasks/${task.id}`, {\n      completed: updatedTask.completed\n    });\n    onToggle(updatedTask); // Passa l'intero task aggiornato\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDE80 Nessuna attivit\\xE0 in elenco. Scrivi la prima! :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-text\",\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => handleToggle(task)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(task.id),\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","api","jsxDEV","_jsxDEV","TaskList","tasks","onDelete","onToggle","handleToggle","task","updatedTask","completed","put","id","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","className","name","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Aver/Desktop/Todo-List/todo-frontend/src/components/TaskList.js"],"sourcesContent":["import React from \"react\";\r\nimport api from \"../services/api\";\r\nimport \"../dashboard.css\"; // Assicurati di importare il file CSS\r\n\r\nconst TaskList = ({ tasks, onDelete, onToggle }) => {\r\n  const handleToggle = async (task) => {\r\n    const updatedTask = { ...task, completed: !task.completed };\r\n    await api.put(`/tasks/${task.id}`, { completed: updatedTask.completed });\r\n    onToggle(updatedTask); // Passa l'intero task aggiornato\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {tasks.length === 0 ? (\r\n        <p>ðŸš€ Nessuna attivitÃ  in elenco. Scrivi la prima! :)</p>\r\n      ) : (\r\n        tasks.map((task) => (\r\n          <li key={task.id}>\r\n            <div className=\"task-text\">{task.name}</div>\r\n            <div className=\"task-actions\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={task.completed}\r\n                onChange={() => handleToggle(task)}\r\n              />\r\n              <button onClick={() => onDelete(task.id)}>\r\n                <strong>X</strong>\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TaskList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAClD,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnC,MAAMC,WAAW,GAAG;MAAE,GAAGD,IAAI;MAAEE,SAAS,EAAE,CAACF,IAAI,CAACE;IAAU,CAAC;IAC3D,MAAMV,GAAG,CAACW,GAAG,CAAC,UAAUH,IAAI,CAACI,EAAE,EAAE,EAAE;MAAEF,SAAS,EAAED,WAAW,CAACC;IAAU,CAAC,CAAC;IACxEJ,QAAQ,CAACG,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACEP,OAAA;IAAAW,QAAA,EACGT,KAAK,CAACU,MAAM,KAAK,CAAC,gBACjBZ,OAAA;MAAAW,QAAA,EAAG;IAAkD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEzDd,KAAK,CAACe,GAAG,CAAEX,IAAI,iBACbN,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAKkB,SAAS,EAAC,WAAW;QAAAP,QAAA,EAAEL,IAAI,CAACa;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5ChB,OAAA;QAAKkB,SAAS,EAAC,cAAc;QAAAP,QAAA,gBAC3BX,OAAA;UACEoB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEf,IAAI,CAACE,SAAU;UACxBc,QAAQ,EAAEA,CAAA,KAAMjB,YAAY,CAACC,IAAI;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACFhB,OAAA;UAAQuB,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAACG,IAAI,CAACI,EAAE,CAAE;UAAAC,QAAA,eACvCX,OAAA;YAAAW,QAAA,EAAQ;UAAC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA,GAXCV,IAAI,CAACI,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYZ,CACL;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET,CAAC;AAACQ,EAAA,GA9BIvB,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}